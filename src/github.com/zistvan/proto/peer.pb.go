// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peer.proto

package bftmessages

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgType int32

const (
	MsgType_ClientRequest  MsgType = 0
	MsgType_ClientResponse MsgType = 1
	MsgType_PrePrepare     MsgType = 2
	MsgType_Prepare        MsgType = 3
	MsgType_Commit         MsgType = 4
	MsgType_Checkpoint     MsgType = 5
	MsgType_Probe          MsgType = 6
	MsgType_ProbeAck       MsgType = 7
	MsgType_NewConfig      MsgType = 8
	MsgType_SyncState      MsgType = 9
)

var MsgType_name = map[int32]string{
	0: "ClientRequest",
	1: "ClientResponse",
	2: "PrePrepare",
	3: "Prepare",
	4: "Commit",
	5: "Checkpoint",
	6: "Probe",
	7: "ProbeAck",
	8: "NewConfig",
	9: "SyncState",
}

var MsgType_value = map[string]int32{
	"ClientRequest":  0,
	"ClientResponse": 1,
	"PrePrepare":     2,
	"Prepare":        3,
	"Commit":         4,
	"Checkpoint":     5,
	"Probe":          6,
	"ProbeAck":       7,
	"NewConfig":      8,
	"SyncState":      9,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}

func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{0}
}

type ReceivedChannel int32

const (
	ReceivedChannel_Client ReceivedChannel = 0
	ReceivedChannel_Peer   ReceivedChannel = 1
	ReceivedChannel_Coord  ReceivedChannel = 2
)

var ReceivedChannel_name = map[int32]string{
	0: "Client",
	1: "Peer",
	2: "Coord",
}

var ReceivedChannel_value = map[string]int32{
	"Client": 0,
	"Peer":   1,
	"Coord":  2,
}

func (x ReceivedChannel) String() string {
	return proto.EnumName(ReceivedChannel_name, int32(x))
}

func (ReceivedChannel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{1}
}

type PeerMessage struct {
	FromNodeId           int32            `protobuf:"varint,1,opt,name=fromNodeId,proto3" json:"fromNodeId,omitempty"`
	MsgId                int32            `protobuf:"varint,2,opt,name=msgId,proto3" json:"msgId,omitempty"`
	EpochId              int32            `protobuf:"varint,3,opt,name=epochId,proto3" json:"epochId,omitempty"`
	Type                 MsgType          `protobuf:"varint,4,opt,name=type,proto3,enum=bftmessages.MsgType" json:"type,omitempty"`
	AttachedData         []byte           `protobuf:"bytes,5,opt,name=attachedData,proto3" json:"attachedData,omitempty"`
	Auth                 []*Authenticator `protobuf:"bytes,6,rep,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PeerMessage) Reset()         { *m = PeerMessage{} }
func (m *PeerMessage) String() string { return proto.CompactTextString(m) }
func (*PeerMessage) ProtoMessage()    {}
func (*PeerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{0}
}

func (m *PeerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerMessage.Unmarshal(m, b)
}
func (m *PeerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerMessage.Marshal(b, m, deterministic)
}
func (m *PeerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerMessage.Merge(m, src)
}
func (m *PeerMessage) XXX_Size() int {
	return xxx_messageInfo_PeerMessage.Size(m)
}
func (m *PeerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PeerMessage proto.InternalMessageInfo

func (m *PeerMessage) GetFromNodeId() int32 {
	if m != nil {
		return m.FromNodeId
	}
	return 0
}

func (m *PeerMessage) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *PeerMessage) GetEpochId() int32 {
	if m != nil {
		return m.EpochId
	}
	return 0
}

func (m *PeerMessage) GetType() MsgType {
	if m != nil {
		return m.Type
	}
	return MsgType_ClientRequest
}

func (m *PeerMessage) GetAttachedData() []byte {
	if m != nil {
		return m.AttachedData
	}
	return nil
}

func (m *PeerMessage) GetAuth() []*Authenticator {
	if m != nil {
		return m.Auth
	}
	return nil
}

type CertificateMessage struct {
	Initialized          bool           `protobuf:"varint,1,opt,name=initialized,proto3" json:"initialized,omitempty"`
	CntPrepared          int32          `protobuf:"varint,2,opt,name=cntPrepared,proto3" json:"cntPrepared,omitempty"`
	Certificates         []*PeerMessage `protobuf:"bytes,3,rep,name=certificates,proto3" json:"certificates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CertificateMessage) Reset()         { *m = CertificateMessage{} }
func (m *CertificateMessage) String() string { return proto.CompactTextString(m) }
func (*CertificateMessage) ProtoMessage()    {}
func (*CertificateMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{1}
}

func (m *CertificateMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateMessage.Unmarshal(m, b)
}
func (m *CertificateMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateMessage.Marshal(b, m, deterministic)
}
func (m *CertificateMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateMessage.Merge(m, src)
}
func (m *CertificateMessage) XXX_Size() int {
	return xxx_messageInfo_CertificateMessage.Size(m)
}
func (m *CertificateMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateMessage proto.InternalMessageInfo

func (m *CertificateMessage) GetInitialized() bool {
	if m != nil {
		return m.Initialized
	}
	return false
}

func (m *CertificateMessage) GetCntPrepared() int32 {
	if m != nil {
		return m.CntPrepared
	}
	return 0
}

func (m *CertificateMessage) GetCertificates() []*PeerMessage {
	if m != nil {
		return m.Certificates
	}
	return nil
}

type PayloadNewConfig struct {
	Members              []int32  `protobuf:"varint,1,rep,packed,name=members,proto3" json:"members,omitempty"`
	Leader               int32    `protobuf:"varint,2,opt,name=leader,proto3" json:"leader,omitempty"`
	DigestState          []byte   `protobuf:"bytes,3,opt,name=digestState,proto3" json:"digestState,omitempty"`
	DigestP              []byte   `protobuf:"bytes,4,opt,name=digestP,proto3" json:"digestP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayloadNewConfig) Reset()         { *m = PayloadNewConfig{} }
func (m *PayloadNewConfig) String() string { return proto.CompactTextString(m) }
func (*PayloadNewConfig) ProtoMessage()    {}
func (*PayloadNewConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{2}
}

func (m *PayloadNewConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayloadNewConfig.Unmarshal(m, b)
}
func (m *PayloadNewConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayloadNewConfig.Marshal(b, m, deterministic)
}
func (m *PayloadNewConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayloadNewConfig.Merge(m, src)
}
func (m *PayloadNewConfig) XXX_Size() int {
	return xxx_messageInfo_PayloadNewConfig.Size(m)
}
func (m *PayloadNewConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PayloadNewConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PayloadNewConfig proto.InternalMessageInfo

func (m *PayloadNewConfig) GetMembers() []int32 {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *PayloadNewConfig) GetLeader() int32 {
	if m != nil {
		return m.Leader
	}
	return 0
}

func (m *PayloadNewConfig) GetDigestState() []byte {
	if m != nil {
		return m.DigestState
	}
	return nil
}

func (m *PayloadNewConfig) GetDigestP() []byte {
	if m != nil {
		return m.DigestP
	}
	return nil
}

type PayloadSyncState struct {
	Clients              []int32             `protobuf:"varint,1,rep,packed,name=clients,proto3" json:"clients,omitempty"`
	Certificate          *CertificateMessage `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	NewConfigMessage     *PeerMessage        `protobuf:"bytes,3,opt,name=newConfigMessage,proto3" json:"newConfigMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PayloadSyncState) Reset()         { *m = PayloadSyncState{} }
func (m *PayloadSyncState) String() string { return proto.CompactTextString(m) }
func (*PayloadSyncState) ProtoMessage()    {}
func (*PayloadSyncState) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{3}
}

func (m *PayloadSyncState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayloadSyncState.Unmarshal(m, b)
}
func (m *PayloadSyncState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayloadSyncState.Marshal(b, m, deterministic)
}
func (m *PayloadSyncState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayloadSyncState.Merge(m, src)
}
func (m *PayloadSyncState) XXX_Size() int {
	return xxx_messageInfo_PayloadSyncState.Size(m)
}
func (m *PayloadSyncState) XXX_DiscardUnknown() {
	xxx_messageInfo_PayloadSyncState.DiscardUnknown(m)
}

var xxx_messageInfo_PayloadSyncState proto.InternalMessageInfo

func (m *PayloadSyncState) GetClients() []int32 {
	if m != nil {
		return m.Clients
	}
	return nil
}

func (m *PayloadSyncState) GetCertificate() *CertificateMessage {
	if m != nil {
		return m.Certificate
	}
	return nil
}

func (m *PayloadSyncState) GetNewConfigMessage() *PeerMessage {
	if m != nil {
		return m.NewConfigMessage
	}
	return nil
}

type ConfigMessage struct {
	BasePort             int32    `protobuf:"varint,1,opt,name=basePort,proto3" json:"basePort,omitempty"`
	NodeCount            int32    `protobuf:"varint,2,opt,name=nodeCount,proto3" json:"nodeCount,omitempty"`
	Roles                []int32  `protobuf:"varint,3,rep,packed,name=roles,proto3" json:"roles,omitempty"`
	Addresses            []string `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	BasePorts            []int32  `protobuf:"varint,5,rep,packed,name=basePorts,proto3" json:"basePorts,omitempty"`
	OutgoingDoHash       bool     `protobuf:"varint,6,opt,name=outgoingDoHash,proto3" json:"outgoingDoHash,omitempty"`
	OutgoingDoSign       bool     `protobuf:"varint,7,opt,name=outgoingDoSign,proto3" json:"outgoingDoSign,omitempty"`
	IncomingDoHash       bool     `protobuf:"varint,8,opt,name=incomingDoHash,proto3" json:"incomingDoHash,omitempty"`
	IncomingVerifySign   bool     `protobuf:"varint,9,opt,name=incomingVerifySign,proto3" json:"incomingVerifySign,omitempty"`
	HashAlg              string   `protobuf:"bytes,10,opt,name=hashAlg,proto3" json:"hashAlg,omitempty"`
	SigType              SigType  `protobuf:"varint,11,opt,name=sigType,proto3,enum=bftmessages.SigType" json:"sigType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigMessage) Reset()         { *m = ConfigMessage{} }
func (m *ConfigMessage) String() string { return proto.CompactTextString(m) }
func (*ConfigMessage) ProtoMessage()    {}
func (*ConfigMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{4}
}

func (m *ConfigMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigMessage.Unmarshal(m, b)
}
func (m *ConfigMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigMessage.Marshal(b, m, deterministic)
}
func (m *ConfigMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigMessage.Merge(m, src)
}
func (m *ConfigMessage) XXX_Size() int {
	return xxx_messageInfo_ConfigMessage.Size(m)
}
func (m *ConfigMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigMessage proto.InternalMessageInfo

func (m *ConfigMessage) GetBasePort() int32 {
	if m != nil {
		return m.BasePort
	}
	return 0
}

func (m *ConfigMessage) GetNodeCount() int32 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *ConfigMessage) GetRoles() []int32 {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *ConfigMessage) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *ConfigMessage) GetBasePorts() []int32 {
	if m != nil {
		return m.BasePorts
	}
	return nil
}

func (m *ConfigMessage) GetOutgoingDoHash() bool {
	if m != nil {
		return m.OutgoingDoHash
	}
	return false
}

func (m *ConfigMessage) GetOutgoingDoSign() bool {
	if m != nil {
		return m.OutgoingDoSign
	}
	return false
}

func (m *ConfigMessage) GetIncomingDoHash() bool {
	if m != nil {
		return m.IncomingDoHash
	}
	return false
}

func (m *ConfigMessage) GetIncomingVerifySign() bool {
	if m != nil {
		return m.IncomingVerifySign
	}
	return false
}

func (m *ConfigMessage) GetHashAlg() string {
	if m != nil {
		return m.HashAlg
	}
	return ""
}

func (m *ConfigMessage) GetSigType() SigType {
	if m != nil {
		return m.SigType
	}
	return SigType_PKSig
}

type SendMessage struct {
	NodeId               []int32          `protobuf:"varint,1,rep,packed,name=nodeId,proto3" json:"nodeId,omitempty"`
	Message              *PeerMessage     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Hash                 []byte           `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Signs                []*Authenticator `protobuf:"bytes,4,rep,name=signs,proto3" json:"signs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SendMessage) Reset()         { *m = SendMessage{} }
func (m *SendMessage) String() string { return proto.CompactTextString(m) }
func (*SendMessage) ProtoMessage()    {}
func (*SendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{5}
}

func (m *SendMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessage.Unmarshal(m, b)
}
func (m *SendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessage.Marshal(b, m, deterministic)
}
func (m *SendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessage.Merge(m, src)
}
func (m *SendMessage) XXX_Size() int {
	return xxx_messageInfo_SendMessage.Size(m)
}
func (m *SendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessage proto.InternalMessageInfo

func (m *SendMessage) GetNodeId() []int32 {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *SendMessage) GetMessage() *PeerMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SendMessage) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *SendMessage) GetSigns() []*Authenticator {
	if m != nil {
		return m.Signs
	}
	return nil
}

type ReceivedMessage struct {
	Channel              ReceivedChannel `protobuf:"varint,1,opt,name=channel,proto3,enum=bftmessages.ReceivedChannel" json:"channel,omitempty"`
	Message              []byte          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReceivedMessage) Reset()         { *m = ReceivedMessage{} }
func (m *ReceivedMessage) String() string { return proto.CompactTextString(m) }
func (*ReceivedMessage) ProtoMessage()    {}
func (*ReceivedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{6}
}

func (m *ReceivedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceivedMessage.Unmarshal(m, b)
}
func (m *ReceivedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceivedMessage.Marshal(b, m, deterministic)
}
func (m *ReceivedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceivedMessage.Merge(m, src)
}
func (m *ReceivedMessage) XXX_Size() int {
	return xxx_messageInfo_ReceivedMessage.Size(m)
}
func (m *ReceivedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceivedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ReceivedMessage proto.InternalMessageInfo

func (m *ReceivedMessage) GetChannel() ReceivedChannel {
	if m != nil {
		return m.Channel
	}
	return ReceivedChannel_Client
}

func (m *ReceivedMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterEnum("bftmessages.MsgType", MsgType_name, MsgType_value)
	proto.RegisterEnum("bftmessages.ReceivedChannel", ReceivedChannel_name, ReceivedChannel_value)
	proto.RegisterType((*PeerMessage)(nil), "bftmessages.PeerMessage")
	proto.RegisterType((*CertificateMessage)(nil), "bftmessages.CertificateMessage")
	proto.RegisterType((*PayloadNewConfig)(nil), "bftmessages.PayloadNewConfig")
	proto.RegisterType((*PayloadSyncState)(nil), "bftmessages.PayloadSyncState")
	proto.RegisterType((*ConfigMessage)(nil), "bftmessages.ConfigMessage")
	proto.RegisterType((*SendMessage)(nil), "bftmessages.SendMessage")
	proto.RegisterType((*ReceivedMessage)(nil), "bftmessages.ReceivedMessage")
}

func init() { proto.RegisterFile("peer.proto", fileDescriptor_055ae5a865fc1c9e) }

var fileDescriptor_055ae5a865fc1c9e = []byte{
	// 767 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0xcd, 0xae, 0xe3, 0x34,
	0x14, 0x9e, 0xdc, 0xfe, 0x9f, 0xf4, 0x96, 0x70, 0x18, 0x8d, 0xa2, 0xab, 0x11, 0x54, 0x5d, 0xa0,
	0x6a, 0x16, 0x15, 0x2a, 0x12, 0x2b, 0x36, 0x97, 0xde, 0x05, 0x77, 0x31, 0xa3, 0xca, 0x45, 0x2c,
	0xd8, 0xb9, 0xc9, 0x69, 0x6a, 0x4d, 0x6b, 0x07, 0xdb, 0x17, 0x54, 0x56, 0xbc, 0x00, 0x5b, 0xb6,
	0xf0, 0x12, 0x3c, 0x0d, 0x2f, 0x83, 0xec, 0xc4, 0x4d, 0x32, 0x33, 0x1a, 0x76, 0xfd, 0x3e, 0x7f,
	0x3e, 0xfd, 0xce, 0x8f, 0x4f, 0x00, 0x4a, 0x22, 0xbd, 0x2a, 0xb5, 0xb2, 0x0a, 0xe3, 0xfd, 0xc1,
	0x9e, 0xc9, 0x18, 0x5e, 0x90, 0xb9, 0xfb, 0x8c, 0x3f, 0xd9, 0x23, 0x49, 0x2b, 0x32, 0x6e, 0x55,
	0xad, 0x58, 0xfc, 0x1b, 0x41, 0xbc, 0x25, 0xd2, 0xaf, 0x2b, 0x15, 0x7e, 0x0e, 0x70, 0xd0, 0xea,
	0xfc, 0x46, 0xe5, 0xf4, 0x98, 0xa7, 0xd1, 0x3c, 0x5a, 0x0e, 0x58, 0x8b, 0xc1, 0xe7, 0x30, 0x38,
	0x9b, 0xe2, 0x31, 0x4f, 0x6f, 0xfc, 0x51, 0x05, 0x30, 0x85, 0x11, 0x95, 0x2a, 0x3b, 0x3e, 0xe6,
	0x69, 0xcf, 0xf3, 0x01, 0xe2, 0x12, 0xfa, 0xf6, 0x52, 0x52, 0xda, 0x9f, 0x47, 0xcb, 0xd9, 0xfa,
	0xf9, 0xaa, 0x65, 0x68, 0xf5, 0xda, 0x14, 0x3f, 0x5c, 0x4a, 0x62, 0x5e, 0x81, 0x0b, 0x98, 0x72,
	0x6b, 0x79, 0x76, 0xa4, 0xfc, 0x81, 0x5b, 0x9e, 0x0e, 0xe6, 0xd1, 0x72, 0xca, 0x3a, 0x1c, 0xae,
	0xa0, 0xef, 0x92, 0x48, 0x87, 0xf3, 0xde, 0x32, 0x5e, 0xdf, 0x75, 0xa2, 0xdd, 0xb7, 0xb3, 0x63,
	0x5e, 0xb7, 0xf8, 0x33, 0x02, 0xdc, 0x90, 0xb6, 0xe2, 0xe0, 0x68, 0x0a, 0x49, 0xce, 0x21, 0x16,
	0x52, 0x58, 0xc1, 0x4f, 0xe2, 0x37, 0xaa, 0xb2, 0x1c, 0xb3, 0x36, 0xe5, 0x14, 0x99, 0xb4, 0x5b,
	0x4d, 0x25, 0xd7, 0x14, 0x92, 0x6d, 0x53, 0xf8, 0x2d, 0x4c, 0xb3, 0x26, 0xb2, 0x49, 0x7b, 0xde,
	0x52, 0xda, 0xb1, 0xd4, 0x2a, 0x2c, 0xeb, 0xa8, 0x17, 0xbf, 0x47, 0x90, 0x6c, 0xf9, 0xe5, 0xa4,
	0x78, 0xfe, 0x86, 0x7e, 0xdd, 0x28, 0x79, 0x10, 0x85, 0xab, 0xe2, 0x99, 0xce, 0x7b, 0xd2, 0x26,
	0x8d, 0xe6, 0x3d, 0x57, 0xc5, 0x1a, 0xe2, 0x0b, 0x18, 0x9e, 0x88, 0xe7, 0xa4, 0x6b, 0x27, 0x35,
	0x72, 0x36, 0x73, 0x51, 0x90, 0xb1, 0x3b, 0xcb, 0x2d, 0xf9, 0xda, 0x4f, 0x59, 0x9b, 0x72, 0x31,
	0x2b, 0xb8, 0xf5, 0x2d, 0x98, 0xb2, 0x00, 0x17, 0xff, 0x34, 0x16, 0x76, 0x17, 0x99, 0x5d, 0xe5,
	0xd9, 0x49, 0x90, 0xb4, 0x57, 0x0b, 0x35, 0xc4, 0x7b, 0x88, 0x5b, 0x19, 0x78, 0x1f, 0xf1, 0xfa,
	0x8b, 0x4e, 0xba, 0xef, 0x57, 0x9a, 0xb5, 0xef, 0xe0, 0x03, 0x24, 0x32, 0x24, 0x5b, 0x0b, 0xbc,
	0xe5, 0x8f, 0x95, 0xed, 0xbd, 0x1b, 0x8b, 0x3f, 0x7a, 0x70, 0xdb, 0x61, 0xf0, 0x0e, 0xc6, 0x7b,
	0x6e, 0x68, 0xab, 0xb4, 0xad, 0x27, 0xf6, 0x8a, 0xf1, 0x25, 0x4c, 0xa4, 0xca, 0x69, 0xa3, 0x9e,
	0xa4, 0xad, 0x8b, 0xd7, 0x10, 0x6e, 0x9a, 0xb5, 0x3a, 0xd5, 0xdd, 0x1b, 0xb0, 0x0a, 0xb8, 0x3b,
	0x3c, 0xcf, 0x35, 0x19, 0x43, 0x26, 0xed, 0xcf, 0x7b, 0xcb, 0x09, 0x6b, 0x08, 0x77, 0x1a, 0xa2,
	0x9b, 0x74, 0xe0, 0xef, 0x35, 0x04, 0x7e, 0x09, 0x33, 0xf5, 0x64, 0x0b, 0x25, 0x64, 0xf1, 0xa0,
	0xbe, 0xe7, 0xc6, 0xcd, 0xaa, 0x9b, 0xae, 0x77, 0xd8, 0xae, 0x6e, 0x27, 0x0a, 0x99, 0x8e, 0xde,
	0xd5, 0x39, 0xd6, 0xe9, 0x84, 0xcc, 0xd4, 0xb9, 0x89, 0x37, 0xae, 0x74, 0x5d, 0x16, 0x57, 0x80,
	0x81, 0xf9, 0x91, 0xb4, 0x38, 0x5c, 0x7c, 0xcc, 0x89, 0xd7, 0x7e, 0xe0, 0xc4, 0x35, 0xfa, 0xc8,
	0xcd, 0xf1, 0xfe, 0x54, 0xa4, 0x30, 0x8f, 0x96, 0x13, 0x16, 0x20, 0xae, 0x60, 0x64, 0x84, 0x7f,
	0x98, 0x69, 0xfc, 0x81, 0x47, 0xbb, 0xab, 0xce, 0x58, 0x10, 0x2d, 0xfe, 0x8a, 0x20, 0xde, 0x91,
	0xcc, 0x43, 0x37, 0x5e, 0xc0, 0x50, 0x86, 0xed, 0xe1, 0x8a, 0x53, 0x23, 0x5c, 0xbb, 0xe9, 0xae,
	0x9a, 0x7e, 0xf3, 0x3f, 0x4d, 0x0f, 0x42, 0x44, 0xe8, 0x3b, 0x5b, 0xf5, 0x60, 0xfb, 0xdf, 0xf8,
	0x15, 0x0c, 0x8c, 0x28, 0x64, 0xd5, 0x99, 0x8f, 0x2f, 0x81, 0x4a, 0xb8, 0xc8, 0xe0, 0x13, 0x46,
	0x19, 0x89, 0x5f, 0xe8, 0x6a, 0xf2, 0x1b, 0x18, 0x65, 0x47, 0x2e, 0x25, 0x9d, 0xfc, 0xc4, 0xcc,
	0xd6, 0x2f, 0x3b, 0x61, 0x82, 0x7c, 0x53, 0x69, 0x58, 0x10, 0x57, 0x4f, 0xb4, 0x49, 0x62, 0x7a,
	0xb5, 0xfa, 0xea, 0xef, 0x08, 0x46, 0xf5, 0x42, 0xc3, 0x4f, 0xe1, 0x76, 0xe3, 0x9f, 0x0d, 0xa3,
	0x9f, 0x9f, 0xc8, 0xd8, 0xe4, 0x19, 0x22, 0xcc, 0x02, 0x65, 0x4a, 0x25, 0x0d, 0x25, 0x11, 0xce,
	0x00, 0xb6, 0x9a, 0xea, 0x8d, 0x92, 0xdc, 0x60, 0x0c, 0xa3, 0x00, 0x7a, 0x08, 0x30, 0xdc, 0xa8,
	0xf3, 0x59, 0xd8, 0xa4, 0xef, 0x84, 0x9b, 0x23, 0x65, 0x6f, 0x4b, 0x25, 0xa4, 0x4d, 0x06, 0x38,
	0x81, 0xc1, 0x56, 0xab, 0x3d, 0x25, 0x43, 0x9c, 0xc2, 0xd8, 0xff, 0xbc, 0xcf, 0xde, 0x26, 0x23,
	0xbc, 0x85, 0xc9, 0x75, 0x9d, 0x24, 0x63, 0x07, 0xaf, 0x4f, 0x3b, 0x99, 0xbc, 0x5a, 0x37, 0x75,
	0xa8, 0x13, 0xf3, 0xff, 0xe2, 0x6d, 0x25, 0xcf, 0x70, 0x0c, 0x7d, 0xd7, 0x84, 0x24, 0x72, 0xf1,
	0x37, 0x4a, 0xe9, 0x3c, 0xb9, 0xf9, 0xee, 0xf6, 0xa7, 0xf6, 0x37, 0x64, 0x3f, 0xf4, 0x5f, 0x8d,
	0xaf, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x9e, 0xfc, 0xfa, 0x65, 0x06, 0x00, 0x00,
}
