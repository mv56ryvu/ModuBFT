// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authenticator.proto

package bftmessages

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SigType int32

const (
	SigType_PKSig SigType = 0
	SigType_MAC   SigType = 1
)

var SigType_name = map[int32]string{
	0: "PKSig",
	1: "MAC",
}

var SigType_value = map[string]int32{
	"PKSig": 0,
	"MAC":   1,
}

func (x SigType) String() string {
	return proto.EnumName(SigType_name, int32(x))
}

func (SigType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e86ec39f7c35dea3, []int{0}
}

type Authenticator struct {
	FromNodeId           int32    `protobuf:"varint,1,opt,name=fromNodeId,proto3" json:"fromNodeId,omitempty"`
	ToNodeId             int32    `protobuf:"varint,2,opt,name=toNodeId,proto3" json:"toNodeId,omitempty"`
	Sig                  []byte   `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
	SigType              SigType  `protobuf:"varint,4,opt,name=sigType,proto3,enum=bftmessages.SigType" json:"sigType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Authenticator) Reset()         { *m = Authenticator{} }
func (m *Authenticator) String() string { return proto.CompactTextString(m) }
func (*Authenticator) ProtoMessage()    {}
func (*Authenticator) Descriptor() ([]byte, []int) {
	return fileDescriptor_e86ec39f7c35dea3, []int{0}
}

func (m *Authenticator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Authenticator.Unmarshal(m, b)
}
func (m *Authenticator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Authenticator.Marshal(b, m, deterministic)
}
func (m *Authenticator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authenticator.Merge(m, src)
}
func (m *Authenticator) XXX_Size() int {
	return xxx_messageInfo_Authenticator.Size(m)
}
func (m *Authenticator) XXX_DiscardUnknown() {
	xxx_messageInfo_Authenticator.DiscardUnknown(m)
}

var xxx_messageInfo_Authenticator proto.InternalMessageInfo

func (m *Authenticator) GetFromNodeId() int32 {
	if m != nil {
		return m.FromNodeId
	}
	return 0
}

func (m *Authenticator) GetToNodeId() int32 {
	if m != nil {
		return m.ToNodeId
	}
	return 0
}

func (m *Authenticator) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *Authenticator) GetSigType() SigType {
	if m != nil {
		return m.SigType
	}
	return SigType_PKSig
}

func init() {
	proto.RegisterEnum("bftmessages.SigType", SigType_name, SigType_value)
	proto.RegisterType((*Authenticator)(nil), "bftmessages.Authenticator")
}

func init() { proto.RegisterFile("authenticator.proto", fileDescriptor_e86ec39f7c35dea3) }

var fileDescriptor_e86ec39f7c35dea3 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x2c, 0x2d, 0xc9,
	0x48, 0xcd, 0x2b, 0xc9, 0x4c, 0x4e, 0x2c, 0xc9, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x4e, 0x4a, 0x2b, 0xc9, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x2d, 0x56, 0xea, 0x65, 0xe4,
	0xe2, 0x75, 0x44, 0x56, 0x24, 0x24, 0xc7, 0xc5, 0x95, 0x56, 0x94, 0x9f, 0xeb, 0x97, 0x9f, 0x92,
	0xea, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x1a, 0x84, 0x24, 0x22, 0x24, 0xc5, 0xc5, 0x51,
	0x92, 0x0f, 0x95, 0x65, 0x02, 0xcb, 0xc2, 0xf9, 0x42, 0x02, 0x5c, 0xcc, 0xc5, 0x99, 0xe9, 0x12,
	0xcc, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x20, 0xa6, 0x90, 0x1e, 0x17, 0x7b, 0x71, 0x66, 0x7a, 0x48,
	0x65, 0x41, 0xaa, 0x04, 0x8b, 0x02, 0xa3, 0x06, 0x9f, 0x91, 0x88, 0x1e, 0x92, 0xf5, 0x7a, 0xc1,
	0x10, 0xb9, 0x20, 0x98, 0x22, 0x2d, 0x59, 0x2e, 0x76, 0xa8, 0x98, 0x10, 0x27, 0x17, 0x6b, 0x80,
	0x77, 0x70, 0x66, 0xba, 0x00, 0x83, 0x10, 0x3b, 0x17, 0xb3, 0xaf, 0xa3, 0xb3, 0x00, 0xa3, 0x13,
	0x6f, 0x14, 0xb2, 0xeb, 0x93, 0xd8, 0xc0, 0x3e, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x80,
	0x7f, 0x44, 0xef, 0xe8, 0x00, 0x00, 0x00,
}
